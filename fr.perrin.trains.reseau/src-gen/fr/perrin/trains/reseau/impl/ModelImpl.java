/**
 * generated by Xtext 2.20.0
 */
package fr.perrin.trains.reseau.impl;

import fr.perrin.trains.reseau.DeclarationPoint;
import fr.perrin.trains.reseau.Model;
import fr.perrin.trains.reseau.ReseauPackage;
import fr.perrin.trains.reseau.Segment;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.perrin.trains.reseau.impl.ModelImpl#getSegments <em>Segments</em>}</li>
 *   <li>{@link fr.perrin.trains.reseau.impl.ModelImpl#getPointsLiaison <em>Points Liaison</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getSegments() <em>Segments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSegments()
   * @generated
   * @ordered
   */
  protected EList<Segment> segments;

  /**
   * The cached value of the '{@link #getPointsLiaison() <em>Points Liaison</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPointsLiaison()
   * @generated
   * @ordered
   */
  protected EList<DeclarationPoint> pointsLiaison;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReseauPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Segment> getSegments()
  {
    if (segments == null)
    {
      segments = new EObjectContainmentEList<Segment>(Segment.class, this, ReseauPackage.MODEL__SEGMENTS);
    }
    return segments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DeclarationPoint> getPointsLiaison()
  {
    if (pointsLiaison == null)
    {
      pointsLiaison = new EObjectContainmentEList<DeclarationPoint>(DeclarationPoint.class, this, ReseauPackage.MODEL__POINTS_LIAISON);
    }
    return pointsLiaison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReseauPackage.MODEL__SEGMENTS:
        return ((InternalEList<?>)getSegments()).basicRemove(otherEnd, msgs);
      case ReseauPackage.MODEL__POINTS_LIAISON:
        return ((InternalEList<?>)getPointsLiaison()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReseauPackage.MODEL__SEGMENTS:
        return getSegments();
      case ReseauPackage.MODEL__POINTS_LIAISON:
        return getPointsLiaison();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReseauPackage.MODEL__SEGMENTS:
        getSegments().clear();
        getSegments().addAll((Collection<? extends Segment>)newValue);
        return;
      case ReseauPackage.MODEL__POINTS_LIAISON:
        getPointsLiaison().clear();
        getPointsLiaison().addAll((Collection<? extends DeclarationPoint>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReseauPackage.MODEL__SEGMENTS:
        getSegments().clear();
        return;
      case ReseauPackage.MODEL__POINTS_LIAISON:
        getPointsLiaison().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReseauPackage.MODEL__SEGMENTS:
        return segments != null && !segments.isEmpty();
      case ReseauPackage.MODEL__POINTS_LIAISON:
        return pointsLiaison != null && !pointsLiaison.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
